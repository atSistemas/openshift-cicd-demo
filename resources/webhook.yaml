apiVersion: v1
kind: Template
labels:
  template: generate-hook
  group: generate-hook
metadata:
  annotations:
    iconClass: icon-jenkins
    tags: instant-app,jenkins,gogs
  name: generate-hook
message: "Use the following credentials for login:\nGogs Git Server: gogs/gogs"
parameters:
- displayName: DEV project name
  value: dev
  name: DEV_PROJECT
  required: true
- displayName: STAGE project name
  value: stage
  name: STAGE_PROJECT
  required: true
- description: Webhook secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: WEBHOOK_SECRET
  required: true
objects:
# Setup Demo
- apiVersion: batch/v1
  kind: Job
  metadata:
    name: webhook-create-gogs
  spec:
    activeDeadlineSeconds: 400
    completions: 1
    parallelism: 1
    template:
      spec:
        containers:
        - env:
          - name: CICD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          command:
          - /bin/bash
          - -x
          - -c
          - |
            GOGS_SVC=$(oc get svc gogs -o template --template='{{.spec.clusterIP}}')
            GOGS_USER=gogs
            GOGS_PWD=gogs
            cat <<EOF > /tmp/data.json
            {
              "clone_addr": "https://github.com/atSistemas/polaris.git",
              "uid": 1,
              "repo_name": "polaris"
            }
            EOF
            _RETURN=$(curl -o /tmp/curl.log -sL -w "%{http_code}" -H "Content-Type: application/json" \
            -u $GOGS_USER:$GOGS_PWD -X POST http://$GOGS_SVC:3000/api/v1/repos/migrate -d @/tmp/data.json)
            if [ $_RETURN != "201" ] ;then
              echo "ERROR: Failed to imported polaris GitHub repo"
              cat /tmp/curl.log
              exit 255
            fi
            sleep 5
            cat <<EOF > /tmp/data.json
            {
              "type": "gogs",
              "config": {
                "url": "https://openshift.default.svc.cluster.local/oapi/v1/namespaces/$CICD_NAMESPACE/buildconfigs/cicd-blue-green-pipeline/webhooks/${WEBHOOK_SECRET}/generic",
                "content_type": "json"
              },
              "events": [
                "push"
              ],
              "active": true
            }
            EOF
            _RETURN=$(curl -o /tmp/curl.log -sL -w "%{http_code}" -H "Content-Type: application/json" \
            -u $GOGS_USER:$GOGS_PWD -X POST http://$GOGS_SVC:3000/api/v1/repos/gogs/polaris/hooks -d @/tmp/data.json)
            if [ $_RETURN != "201" ] ; then
              echo "ERROR: Failed to set webhook"
              cat /tmp/curl.log
              exit 255
            fi
          image: openshift/origin:v3.7.0
          name: webhook-create-gogs-job
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
restartPolicy: Never
